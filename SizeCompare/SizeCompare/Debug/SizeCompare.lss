
SizeCompare.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000660  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00802000  00802000  000006d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000008a  00802000  00802000  000006d4  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000006d4  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000704  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000020  00000000  00000000  00000744  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000285d  00000000  00000000  00000764  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000025ce  00000000  00000000  00002fc1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000300  00000000  00000000  0000558f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000024  00000000  00000000  00005890  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00001ba3  00000000  00000000  000058b4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00007457  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 a2 00 	jmp	0x144	; 0x144 <__ctors_end>
   4:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
   8:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
   c:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  10:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  14:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  18:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  1c:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  20:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  24:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  28:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  2c:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  30:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  34:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  38:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  3c:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  40:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  44:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  48:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  4c:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  50:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  54:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  58:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  5c:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  60:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  64:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  68:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  6c:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  70:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  74:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  78:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  7c:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  80:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  84:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  88:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  8c:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  90:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  94:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  98:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  9c:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  a0:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  a4:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  a8:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  ac:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  b0:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  b4:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  b8:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  bc:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  c0:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  c4:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  c8:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  cc:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  d0:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  d4:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  d8:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  dc:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  e0:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  e4:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  e8:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  ec:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  f0:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  f4:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  f8:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
  fc:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 100:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 104:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 108:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 10c:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 110:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 114:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 118:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 11c:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 120:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 124:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 128:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 12c:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 130:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 134:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 138:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 13c:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>
 140:	0c 94 b6 00 	jmp	0x16c	; 0x16c <__bad_interrupt>

00000144 <__ctors_end>:
 144:	11 24       	eor	r1, r1
 146:	1f be       	out	0x3f, r1	; 63
 148:	cf ef       	ldi	r28, 0xFF	; 255
 14a:	cd bf       	out	0x3d, r28	; 61
 14c:	df e3       	ldi	r29, 0x3F	; 63
 14e:	de bf       	out	0x3e, r29	; 62
 150:	00 e0       	ldi	r16, 0x00	; 0
 152:	0c bf       	out	0x3c, r16	; 60

00000154 <__do_clear_bss>:
 154:	20 e2       	ldi	r18, 0x20	; 32
 156:	a0 e0       	ldi	r26, 0x00	; 0
 158:	b0 e2       	ldi	r27, 0x20	; 32
 15a:	01 c0       	rjmp	.+2      	; 0x15e <.do_clear_bss_start>

0000015c <.do_clear_bss_loop>:
 15c:	1d 92       	st	X+, r1

0000015e <.do_clear_bss_start>:
 15e:	aa 38       	cpi	r26, 0x8A	; 138
 160:	b2 07       	cpc	r27, r18
 162:	e1 f7       	brne	.-8      	; 0x15c <.do_clear_bss_loop>
 164:	0e 94 b8 00 	call	0x170	; 0x170 <main>
 168:	0c 94 2e 03 	jmp	0x65c	; 0x65c <_exit>

0000016c <__bad_interrupt>:
 16c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000170 <main>:
	static unsigned int index = 0;
	static float myFloatArray[32] = {0.0};
    /* Replace with your application code */
    while (1) 
    {
		myFloat1 += 3.14159;
 170:	20 ed       	ldi	r18, 0xD0	; 208
 172:	3f e0       	ldi	r19, 0x0F	; 15
 174:	49 e4       	ldi	r20, 0x49	; 73
 176:	50 e4       	ldi	r21, 0x40	; 64
 178:	60 91 86 20 	lds	r22, 0x2086	; 0x802086 <_ZZ4mainE8myFloat1>
 17c:	70 91 87 20 	lds	r23, 0x2087	; 0x802087 <_ZZ4mainE8myFloat1+0x1>
 180:	80 91 88 20 	lds	r24, 0x2088	; 0x802088 <_ZZ4mainE8myFloat1+0x2>
 184:	90 91 89 20 	lds	r25, 0x2089	; 0x802089 <_ZZ4mainE8myFloat1+0x3>
 188:	0e 94 64 01 	call	0x2c8	; 0x2c8 <__addsf3>
 18c:	6b 01       	movw	r12, r22
 18e:	7c 01       	movw	r14, r24
 190:	60 93 86 20 	sts	0x2086, r22	; 0x802086 <_ZZ4mainE8myFloat1>
 194:	70 93 87 20 	sts	0x2087, r23	; 0x802087 <_ZZ4mainE8myFloat1+0x1>
 198:	80 93 88 20 	sts	0x2088, r24	; 0x802088 <_ZZ4mainE8myFloat1+0x2>
 19c:	90 93 89 20 	sts	0x2089, r25	; 0x802089 <_ZZ4mainE8myFloat1+0x3>
		myFloat2 = (myFloat1 * 2.718) - (0.1276 * myFloat2);
 1a0:	26 eb       	ldi	r18, 0xB6	; 182
 1a2:	33 ef       	ldi	r19, 0xF3	; 243
 1a4:	4d e2       	ldi	r20, 0x2D	; 45
 1a6:	50 e4       	ldi	r21, 0x40	; 64
 1a8:	0e 94 c1 02 	call	0x582	; 0x582 <__mulsf3>
 1ac:	4b 01       	movw	r8, r22
 1ae:	5c 01       	movw	r10, r24
 1b0:	23 e9       	ldi	r18, 0x93	; 147
 1b2:	39 ea       	ldi	r19, 0xA9	; 169
 1b4:	42 e0       	ldi	r20, 0x02	; 2
 1b6:	5e e3       	ldi	r21, 0x3E	; 62
 1b8:	60 91 82 20 	lds	r22, 0x2082	; 0x802082 <_ZZ4mainE8myFloat2>
 1bc:	70 91 83 20 	lds	r23, 0x2083	; 0x802083 <_ZZ4mainE8myFloat2+0x1>
 1c0:	80 91 84 20 	lds	r24, 0x2084	; 0x802084 <_ZZ4mainE8myFloat2+0x2>
 1c4:	90 91 85 20 	lds	r25, 0x2085	; 0x802085 <_ZZ4mainE8myFloat2+0x3>
 1c8:	0e 94 c1 02 	call	0x582	; 0x582 <__mulsf3>
 1cc:	9b 01       	movw	r18, r22
 1ce:	ac 01       	movw	r20, r24
 1d0:	c5 01       	movw	r24, r10
 1d2:	b4 01       	movw	r22, r8
 1d4:	0e 94 63 01 	call	0x2c6	; 0x2c6 <__subsf3>
 1d8:	4b 01       	movw	r8, r22
 1da:	5c 01       	movw	r10, r24
 1dc:	60 93 82 20 	sts	0x2082, r22	; 0x802082 <_ZZ4mainE8myFloat2>
 1e0:	70 93 83 20 	sts	0x2083, r23	; 0x802083 <_ZZ4mainE8myFloat2+0x1>
 1e4:	80 93 84 20 	sts	0x2084, r24	; 0x802084 <_ZZ4mainE8myFloat2+0x2>
 1e8:	90 93 85 20 	sts	0x2085, r25	; 0x802085 <_ZZ4mainE8myFloat2+0x3>
		if(myFloat2 > 31.4159)
 1ec:	23 ec       	ldi	r18, 0xC3	; 195
 1ee:	33 e5       	ldi	r19, 0x53	; 83
 1f0:	4b ef       	ldi	r20, 0xFB	; 251
 1f2:	51 e4       	ldi	r21, 0x41	; 65
 1f4:	0e 94 bc 02 	call	0x578	; 0x578 <__gesf2>
 1f8:	18 16       	cp	r1, r24
 1fa:	2c f5       	brge	.+74     	; 0x246 <main+0xd6>
		{
			myFloatArray[index++] = myFloat1;
 1fc:	80 91 80 20 	lds	r24, 0x2080	; 0x802080 <_ZZ4mainE5index>
 200:	90 91 81 20 	lds	r25, 0x2081	; 0x802081 <_ZZ4mainE5index+0x1>
 204:	9c 01       	movw	r18, r24
 206:	2f 5f       	subi	r18, 0xFF	; 255
 208:	3f 4f       	sbci	r19, 0xFF	; 255
 20a:	20 93 80 20 	sts	0x2080, r18	; 0x802080 <_ZZ4mainE5index>
 20e:	30 93 81 20 	sts	0x2081, r19	; 0x802081 <_ZZ4mainE5index+0x1>
 212:	88 0f       	add	r24, r24
 214:	99 1f       	adc	r25, r25
 216:	88 0f       	add	r24, r24
 218:	99 1f       	adc	r25, r25
 21a:	fc 01       	movw	r30, r24
 21c:	e0 50       	subi	r30, 0x00	; 0
 21e:	f0 4e       	sbci	r31, 0xE0	; 224
 220:	c0 82       	st	Z, r12
 222:	d1 82       	std	Z+1, r13	; 0x01
 224:	e2 82       	std	Z+2, r14	; 0x02
 226:	f3 82       	std	Z+3, r15	; 0x03
			myFloat2 = myFloat1 / myFloat2;
 228:	a5 01       	movw	r20, r10
 22a:	94 01       	movw	r18, r8
 22c:	c7 01       	movw	r24, r14
 22e:	b6 01       	movw	r22, r12
 230:	0e 94 d5 01 	call	0x3aa	; 0x3aa <__divsf3>
 234:	60 93 82 20 	sts	0x2082, r22	; 0x802082 <_ZZ4mainE8myFloat2>
 238:	70 93 83 20 	sts	0x2083, r23	; 0x802083 <_ZZ4mainE8myFloat2+0x1>
 23c:	80 93 84 20 	sts	0x2084, r24	; 0x802084 <_ZZ4mainE8myFloat2+0x2>
 240:	90 93 85 20 	sts	0x2085, r25	; 0x802085 <_ZZ4mainE8myFloat2+0x3>
 244:	34 c0       	rjmp	.+104    	; 0x2ae <main+0x13e>
		}
		else
		{
			myFloatArray[index++] = myFloat2;
 246:	20 91 80 20 	lds	r18, 0x2080	; 0x802080 <_ZZ4mainE5index>
 24a:	30 91 81 20 	lds	r19, 0x2081	; 0x802081 <_ZZ4mainE5index+0x1>
 24e:	c9 01       	movw	r24, r18
 250:	01 96       	adiw	r24, 0x01	; 1
 252:	80 93 80 20 	sts	0x2080, r24	; 0x802080 <_ZZ4mainE5index>
 256:	90 93 81 20 	sts	0x2081, r25	; 0x802081 <_ZZ4mainE5index+0x1>
 25a:	22 0f       	add	r18, r18
 25c:	33 1f       	adc	r19, r19
 25e:	22 0f       	add	r18, r18
 260:	33 1f       	adc	r19, r19
 262:	f9 01       	movw	r30, r18
 264:	e0 50       	subi	r30, 0x00	; 0
 266:	f0 4e       	sbci	r31, 0xE0	; 224
 268:	80 82       	st	Z, r8
 26a:	91 82       	std	Z+1, r9	; 0x01
 26c:	a2 82       	std	Z+2, r10	; 0x02
 26e:	b3 82       	std	Z+3, r11	; 0x03
			if(myFloatArray[index] > myFloat1)
 270:	88 0f       	add	r24, r24
 272:	99 1f       	adc	r25, r25
 274:	88 0f       	add	r24, r24
 276:	99 1f       	adc	r25, r25
 278:	fc 01       	movw	r30, r24
 27a:	e0 50       	subi	r30, 0x00	; 0
 27c:	f0 4e       	sbci	r31, 0xE0	; 224
 27e:	20 81       	ld	r18, Z
 280:	31 81       	ldd	r19, Z+1	; 0x01
 282:	42 81       	ldd	r20, Z+2	; 0x02
 284:	53 81       	ldd	r21, Z+3	; 0x03
 286:	c7 01       	movw	r24, r14
 288:	b6 01       	movw	r22, r12
 28a:	0e 94 d0 01 	call	0x3a0	; 0x3a0 <__cmpsf2>
 28e:	88 23       	and	r24, r24
 290:	74 f4       	brge	.+28     	; 0x2ae <main+0x13e>
			{
				myFloat1 = myFloat2 / myFloat1;
 292:	a7 01       	movw	r20, r14
 294:	96 01       	movw	r18, r12
 296:	c5 01       	movw	r24, r10
 298:	b4 01       	movw	r22, r8
 29a:	0e 94 d5 01 	call	0x3aa	; 0x3aa <__divsf3>
 29e:	60 93 86 20 	sts	0x2086, r22	; 0x802086 <_ZZ4mainE8myFloat1>
 2a2:	70 93 87 20 	sts	0x2087, r23	; 0x802087 <_ZZ4mainE8myFloat1+0x1>
 2a6:	80 93 88 20 	sts	0x2088, r24	; 0x802088 <_ZZ4mainE8myFloat1+0x2>
 2aa:	90 93 89 20 	sts	0x2089, r25	; 0x802089 <_ZZ4mainE8myFloat1+0x3>
		
			}
		}
		if(index >= 32)
 2ae:	80 91 80 20 	lds	r24, 0x2080	; 0x802080 <_ZZ4mainE5index>
 2b2:	90 91 81 20 	lds	r25, 0x2081	; 0x802081 <_ZZ4mainE5index+0x1>
 2b6:	80 97       	sbiw	r24, 0x20	; 32
 2b8:	08 f4       	brcc	.+2      	; 0x2bc <main+0x14c>
 2ba:	5a cf       	rjmp	.-332    	; 0x170 <main>
		{
			index = 0;
 2bc:	10 92 80 20 	sts	0x2080, r1	; 0x802080 <_ZZ4mainE5index>
 2c0:	10 92 81 20 	sts	0x2081, r1	; 0x802081 <_ZZ4mainE5index+0x1>
 2c4:	55 cf       	rjmp	.-342    	; 0x170 <main>

000002c6 <__subsf3>:
 2c6:	50 58       	subi	r21, 0x80	; 128

000002c8 <__addsf3>:
 2c8:	bb 27       	eor	r27, r27
 2ca:	aa 27       	eor	r26, r26
 2cc:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <__addsf3x>
 2d0:	0c 94 82 02 	jmp	0x504	; 0x504 <__fp_round>
 2d4:	0e 94 74 02 	call	0x4e8	; 0x4e8 <__fp_pscA>
 2d8:	38 f0       	brcs	.+14     	; 0x2e8 <__addsf3+0x20>
 2da:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__fp_pscB>
 2de:	20 f0       	brcs	.+8      	; 0x2e8 <__addsf3+0x20>
 2e0:	39 f4       	brne	.+14     	; 0x2f0 <__addsf3+0x28>
 2e2:	9f 3f       	cpi	r25, 0xFF	; 255
 2e4:	19 f4       	brne	.+6      	; 0x2ec <__addsf3+0x24>
 2e6:	26 f4       	brtc	.+8      	; 0x2f0 <__addsf3+0x28>
 2e8:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <__fp_nan>
 2ec:	0e f4       	brtc	.+2      	; 0x2f0 <__addsf3+0x28>
 2ee:	e0 95       	com	r30
 2f0:	e7 fb       	bst	r30, 7
 2f2:	0c 94 6b 02 	jmp	0x4d6	; 0x4d6 <__fp_inf>

000002f6 <__addsf3x>:
 2f6:	e9 2f       	mov	r30, r25
 2f8:	0e 94 93 02 	call	0x526	; 0x526 <__fp_split3>
 2fc:	58 f3       	brcs	.-42     	; 0x2d4 <__addsf3+0xc>
 2fe:	ba 17       	cp	r27, r26
 300:	62 07       	cpc	r22, r18
 302:	73 07       	cpc	r23, r19
 304:	84 07       	cpc	r24, r20
 306:	95 07       	cpc	r25, r21
 308:	20 f0       	brcs	.+8      	; 0x312 <__addsf3x+0x1c>
 30a:	79 f4       	brne	.+30     	; 0x32a <__addsf3x+0x34>
 30c:	a6 f5       	brtc	.+104    	; 0x376 <__addsf3x+0x80>
 30e:	0c 94 b5 02 	jmp	0x56a	; 0x56a <__fp_zero>
 312:	0e f4       	brtc	.+2      	; 0x316 <__addsf3x+0x20>
 314:	e0 95       	com	r30
 316:	0b 2e       	mov	r0, r27
 318:	ba 2f       	mov	r27, r26
 31a:	a0 2d       	mov	r26, r0
 31c:	0b 01       	movw	r0, r22
 31e:	b9 01       	movw	r22, r18
 320:	90 01       	movw	r18, r0
 322:	0c 01       	movw	r0, r24
 324:	ca 01       	movw	r24, r20
 326:	a0 01       	movw	r20, r0
 328:	11 24       	eor	r1, r1
 32a:	ff 27       	eor	r31, r31
 32c:	59 1b       	sub	r21, r25
 32e:	99 f0       	breq	.+38     	; 0x356 <__addsf3x+0x60>
 330:	59 3f       	cpi	r21, 0xF9	; 249
 332:	50 f4       	brcc	.+20     	; 0x348 <__addsf3x+0x52>
 334:	50 3e       	cpi	r21, 0xE0	; 224
 336:	68 f1       	brcs	.+90     	; 0x392 <__addsf3x+0x9c>
 338:	1a 16       	cp	r1, r26
 33a:	f0 40       	sbci	r31, 0x00	; 0
 33c:	a2 2f       	mov	r26, r18
 33e:	23 2f       	mov	r18, r19
 340:	34 2f       	mov	r19, r20
 342:	44 27       	eor	r20, r20
 344:	58 5f       	subi	r21, 0xF8	; 248
 346:	f3 cf       	rjmp	.-26     	; 0x32e <__addsf3x+0x38>
 348:	46 95       	lsr	r20
 34a:	37 95       	ror	r19
 34c:	27 95       	ror	r18
 34e:	a7 95       	ror	r26
 350:	f0 40       	sbci	r31, 0x00	; 0
 352:	53 95       	inc	r21
 354:	c9 f7       	brne	.-14     	; 0x348 <__addsf3x+0x52>
 356:	7e f4       	brtc	.+30     	; 0x376 <__addsf3x+0x80>
 358:	1f 16       	cp	r1, r31
 35a:	ba 0b       	sbc	r27, r26
 35c:	62 0b       	sbc	r22, r18
 35e:	73 0b       	sbc	r23, r19
 360:	84 0b       	sbc	r24, r20
 362:	ba f0       	brmi	.+46     	; 0x392 <__addsf3x+0x9c>
 364:	91 50       	subi	r25, 0x01	; 1
 366:	a1 f0       	breq	.+40     	; 0x390 <__addsf3x+0x9a>
 368:	ff 0f       	add	r31, r31
 36a:	bb 1f       	adc	r27, r27
 36c:	66 1f       	adc	r22, r22
 36e:	77 1f       	adc	r23, r23
 370:	88 1f       	adc	r24, r24
 372:	c2 f7       	brpl	.-16     	; 0x364 <__addsf3x+0x6e>
 374:	0e c0       	rjmp	.+28     	; 0x392 <__addsf3x+0x9c>
 376:	ba 0f       	add	r27, r26
 378:	62 1f       	adc	r22, r18
 37a:	73 1f       	adc	r23, r19
 37c:	84 1f       	adc	r24, r20
 37e:	48 f4       	brcc	.+18     	; 0x392 <__addsf3x+0x9c>
 380:	87 95       	ror	r24
 382:	77 95       	ror	r23
 384:	67 95       	ror	r22
 386:	b7 95       	ror	r27
 388:	f7 95       	ror	r31
 38a:	9e 3f       	cpi	r25, 0xFE	; 254
 38c:	08 f0       	brcs	.+2      	; 0x390 <__addsf3x+0x9a>
 38e:	b0 cf       	rjmp	.-160    	; 0x2f0 <__addsf3+0x28>
 390:	93 95       	inc	r25
 392:	88 0f       	add	r24, r24
 394:	08 f0       	brcs	.+2      	; 0x398 <__addsf3x+0xa2>
 396:	99 27       	eor	r25, r25
 398:	ee 0f       	add	r30, r30
 39a:	97 95       	ror	r25
 39c:	87 95       	ror	r24
 39e:	08 95       	ret

000003a0 <__cmpsf2>:
 3a0:	0e 94 47 02 	call	0x48e	; 0x48e <__fp_cmp>
 3a4:	08 f4       	brcc	.+2      	; 0x3a8 <__cmpsf2+0x8>
 3a6:	81 e0       	ldi	r24, 0x01	; 1
 3a8:	08 95       	ret

000003aa <__divsf3>:
 3aa:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <__divsf3x>
 3ae:	0c 94 82 02 	jmp	0x504	; 0x504 <__fp_round>
 3b2:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__fp_pscB>
 3b6:	58 f0       	brcs	.+22     	; 0x3ce <__divsf3+0x24>
 3b8:	0e 94 74 02 	call	0x4e8	; 0x4e8 <__fp_pscA>
 3bc:	40 f0       	brcs	.+16     	; 0x3ce <__divsf3+0x24>
 3be:	29 f4       	brne	.+10     	; 0x3ca <__divsf3+0x20>
 3c0:	5f 3f       	cpi	r21, 0xFF	; 255
 3c2:	29 f0       	breq	.+10     	; 0x3ce <__divsf3+0x24>
 3c4:	0c 94 6b 02 	jmp	0x4d6	; 0x4d6 <__fp_inf>
 3c8:	51 11       	cpse	r21, r1
 3ca:	0c 94 b6 02 	jmp	0x56c	; 0x56c <__fp_szero>
 3ce:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <__fp_nan>

000003d2 <__divsf3x>:
 3d2:	0e 94 93 02 	call	0x526	; 0x526 <__fp_split3>
 3d6:	68 f3       	brcs	.-38     	; 0x3b2 <__divsf3+0x8>

000003d8 <__divsf3_pse>:
 3d8:	99 23       	and	r25, r25
 3da:	b1 f3       	breq	.-20     	; 0x3c8 <__divsf3+0x1e>
 3dc:	55 23       	and	r21, r21
 3de:	91 f3       	breq	.-28     	; 0x3c4 <__divsf3+0x1a>
 3e0:	95 1b       	sub	r25, r21
 3e2:	55 0b       	sbc	r21, r21
 3e4:	bb 27       	eor	r27, r27
 3e6:	aa 27       	eor	r26, r26
 3e8:	62 17       	cp	r22, r18
 3ea:	73 07       	cpc	r23, r19
 3ec:	84 07       	cpc	r24, r20
 3ee:	38 f0       	brcs	.+14     	; 0x3fe <__divsf3_pse+0x26>
 3f0:	9f 5f       	subi	r25, 0xFF	; 255
 3f2:	5f 4f       	sbci	r21, 0xFF	; 255
 3f4:	22 0f       	add	r18, r18
 3f6:	33 1f       	adc	r19, r19
 3f8:	44 1f       	adc	r20, r20
 3fa:	aa 1f       	adc	r26, r26
 3fc:	a9 f3       	breq	.-22     	; 0x3e8 <__divsf3_pse+0x10>
 3fe:	35 d0       	rcall	.+106    	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 400:	0e 2e       	mov	r0, r30
 402:	3a f0       	brmi	.+14     	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 404:	e0 e8       	ldi	r30, 0x80	; 128
 406:	32 d0       	rcall	.+100    	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 408:	91 50       	subi	r25, 0x01	; 1
 40a:	50 40       	sbci	r21, 0x00	; 0
 40c:	e6 95       	lsr	r30
 40e:	00 1c       	adc	r0, r0
 410:	ca f7       	brpl	.-14     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
 412:	2b d0       	rcall	.+86     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 414:	fe 2f       	mov	r31, r30
 416:	29 d0       	rcall	.+82     	; 0x46a <__LOCK_REGION_LENGTH__+0x6a>
 418:	66 0f       	add	r22, r22
 41a:	77 1f       	adc	r23, r23
 41c:	88 1f       	adc	r24, r24
 41e:	bb 1f       	adc	r27, r27
 420:	26 17       	cp	r18, r22
 422:	37 07       	cpc	r19, r23
 424:	48 07       	cpc	r20, r24
 426:	ab 07       	cpc	r26, r27
 428:	b0 e8       	ldi	r27, 0x80	; 128
 42a:	09 f0       	breq	.+2      	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 42c:	bb 0b       	sbc	r27, r27
 42e:	80 2d       	mov	r24, r0
 430:	bf 01       	movw	r22, r30
 432:	ff 27       	eor	r31, r31
 434:	93 58       	subi	r25, 0x83	; 131
 436:	5f 4f       	sbci	r21, 0xFF	; 255
 438:	3a f0       	brmi	.+14     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 43a:	9e 3f       	cpi	r25, 0xFE	; 254
 43c:	51 05       	cpc	r21, r1
 43e:	78 f0       	brcs	.+30     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
 440:	0c 94 6b 02 	jmp	0x4d6	; 0x4d6 <__fp_inf>
 444:	0c 94 b6 02 	jmp	0x56c	; 0x56c <__fp_szero>
 448:	5f 3f       	cpi	r21, 0xFF	; 255
 44a:	e4 f3       	brlt	.-8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 44c:	98 3e       	cpi	r25, 0xE8	; 232
 44e:	d4 f3       	brlt	.-12     	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 450:	86 95       	lsr	r24
 452:	77 95       	ror	r23
 454:	67 95       	ror	r22
 456:	b7 95       	ror	r27
 458:	f7 95       	ror	r31
 45a:	9f 5f       	subi	r25, 0xFF	; 255
 45c:	c9 f7       	brne	.-14     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 45e:	88 0f       	add	r24, r24
 460:	91 1d       	adc	r25, r1
 462:	96 95       	lsr	r25
 464:	87 95       	ror	r24
 466:	97 f9       	bld	r25, 7
 468:	08 95       	ret
 46a:	e1 e0       	ldi	r30, 0x01	; 1
 46c:	66 0f       	add	r22, r22
 46e:	77 1f       	adc	r23, r23
 470:	88 1f       	adc	r24, r24
 472:	bb 1f       	adc	r27, r27
 474:	62 17       	cp	r22, r18
 476:	73 07       	cpc	r23, r19
 478:	84 07       	cpc	r24, r20
 47a:	ba 07       	cpc	r27, r26
 47c:	20 f0       	brcs	.+8      	; 0x486 <__LOCK_REGION_LENGTH__+0x86>
 47e:	62 1b       	sub	r22, r18
 480:	73 0b       	sbc	r23, r19
 482:	84 0b       	sbc	r24, r20
 484:	ba 0b       	sbc	r27, r26
 486:	ee 1f       	adc	r30, r30
 488:	88 f7       	brcc	.-30     	; 0x46c <__LOCK_REGION_LENGTH__+0x6c>
 48a:	e0 95       	com	r30
 48c:	08 95       	ret

0000048e <__fp_cmp>:
 48e:	99 0f       	add	r25, r25
 490:	00 08       	sbc	r0, r0
 492:	55 0f       	add	r21, r21
 494:	aa 0b       	sbc	r26, r26
 496:	e0 e8       	ldi	r30, 0x80	; 128
 498:	fe ef       	ldi	r31, 0xFE	; 254
 49a:	16 16       	cp	r1, r22
 49c:	17 06       	cpc	r1, r23
 49e:	e8 07       	cpc	r30, r24
 4a0:	f9 07       	cpc	r31, r25
 4a2:	c0 f0       	brcs	.+48     	; 0x4d4 <__fp_cmp+0x46>
 4a4:	12 16       	cp	r1, r18
 4a6:	13 06       	cpc	r1, r19
 4a8:	e4 07       	cpc	r30, r20
 4aa:	f5 07       	cpc	r31, r21
 4ac:	98 f0       	brcs	.+38     	; 0x4d4 <__fp_cmp+0x46>
 4ae:	62 1b       	sub	r22, r18
 4b0:	73 0b       	sbc	r23, r19
 4b2:	84 0b       	sbc	r24, r20
 4b4:	95 0b       	sbc	r25, r21
 4b6:	39 f4       	brne	.+14     	; 0x4c6 <__fp_cmp+0x38>
 4b8:	0a 26       	eor	r0, r26
 4ba:	61 f0       	breq	.+24     	; 0x4d4 <__fp_cmp+0x46>
 4bc:	23 2b       	or	r18, r19
 4be:	24 2b       	or	r18, r20
 4c0:	25 2b       	or	r18, r21
 4c2:	21 f4       	brne	.+8      	; 0x4cc <__fp_cmp+0x3e>
 4c4:	08 95       	ret
 4c6:	0a 26       	eor	r0, r26
 4c8:	09 f4       	brne	.+2      	; 0x4cc <__fp_cmp+0x3e>
 4ca:	a1 40       	sbci	r26, 0x01	; 1
 4cc:	a6 95       	lsr	r26
 4ce:	8f ef       	ldi	r24, 0xFF	; 255
 4d0:	81 1d       	adc	r24, r1
 4d2:	81 1d       	adc	r24, r1
 4d4:	08 95       	ret

000004d6 <__fp_inf>:
 4d6:	97 f9       	bld	r25, 7
 4d8:	9f 67       	ori	r25, 0x7F	; 127
 4da:	80 e8       	ldi	r24, 0x80	; 128
 4dc:	70 e0       	ldi	r23, 0x00	; 0
 4de:	60 e0       	ldi	r22, 0x00	; 0
 4e0:	08 95       	ret

000004e2 <__fp_nan>:
 4e2:	9f ef       	ldi	r25, 0xFF	; 255
 4e4:	80 ec       	ldi	r24, 0xC0	; 192
 4e6:	08 95       	ret

000004e8 <__fp_pscA>:
 4e8:	00 24       	eor	r0, r0
 4ea:	0a 94       	dec	r0
 4ec:	16 16       	cp	r1, r22
 4ee:	17 06       	cpc	r1, r23
 4f0:	18 06       	cpc	r1, r24
 4f2:	09 06       	cpc	r0, r25
 4f4:	08 95       	ret

000004f6 <__fp_pscB>:
 4f6:	00 24       	eor	r0, r0
 4f8:	0a 94       	dec	r0
 4fa:	12 16       	cp	r1, r18
 4fc:	13 06       	cpc	r1, r19
 4fe:	14 06       	cpc	r1, r20
 500:	05 06       	cpc	r0, r21
 502:	08 95       	ret

00000504 <__fp_round>:
 504:	09 2e       	mov	r0, r25
 506:	03 94       	inc	r0
 508:	00 0c       	add	r0, r0
 50a:	11 f4       	brne	.+4      	; 0x510 <__fp_round+0xc>
 50c:	88 23       	and	r24, r24
 50e:	52 f0       	brmi	.+20     	; 0x524 <__fp_round+0x20>
 510:	bb 0f       	add	r27, r27
 512:	40 f4       	brcc	.+16     	; 0x524 <__fp_round+0x20>
 514:	bf 2b       	or	r27, r31
 516:	11 f4       	brne	.+4      	; 0x51c <__fp_round+0x18>
 518:	60 ff       	sbrs	r22, 0
 51a:	04 c0       	rjmp	.+8      	; 0x524 <__fp_round+0x20>
 51c:	6f 5f       	subi	r22, 0xFF	; 255
 51e:	7f 4f       	sbci	r23, 0xFF	; 255
 520:	8f 4f       	sbci	r24, 0xFF	; 255
 522:	9f 4f       	sbci	r25, 0xFF	; 255
 524:	08 95       	ret

00000526 <__fp_split3>:
 526:	57 fd       	sbrc	r21, 7
 528:	90 58       	subi	r25, 0x80	; 128
 52a:	44 0f       	add	r20, r20
 52c:	55 1f       	adc	r21, r21
 52e:	59 f0       	breq	.+22     	; 0x546 <__fp_splitA+0x10>
 530:	5f 3f       	cpi	r21, 0xFF	; 255
 532:	71 f0       	breq	.+28     	; 0x550 <__fp_splitA+0x1a>
 534:	47 95       	ror	r20

00000536 <__fp_splitA>:
 536:	88 0f       	add	r24, r24
 538:	97 fb       	bst	r25, 7
 53a:	99 1f       	adc	r25, r25
 53c:	61 f0       	breq	.+24     	; 0x556 <__fp_splitA+0x20>
 53e:	9f 3f       	cpi	r25, 0xFF	; 255
 540:	79 f0       	breq	.+30     	; 0x560 <__fp_splitA+0x2a>
 542:	87 95       	ror	r24
 544:	08 95       	ret
 546:	12 16       	cp	r1, r18
 548:	13 06       	cpc	r1, r19
 54a:	14 06       	cpc	r1, r20
 54c:	55 1f       	adc	r21, r21
 54e:	f2 cf       	rjmp	.-28     	; 0x534 <__fp_split3+0xe>
 550:	46 95       	lsr	r20
 552:	f1 df       	rcall	.-30     	; 0x536 <__fp_splitA>
 554:	08 c0       	rjmp	.+16     	; 0x566 <__fp_splitA+0x30>
 556:	16 16       	cp	r1, r22
 558:	17 06       	cpc	r1, r23
 55a:	18 06       	cpc	r1, r24
 55c:	99 1f       	adc	r25, r25
 55e:	f1 cf       	rjmp	.-30     	; 0x542 <__fp_splitA+0xc>
 560:	86 95       	lsr	r24
 562:	71 05       	cpc	r23, r1
 564:	61 05       	cpc	r22, r1
 566:	08 94       	sec
 568:	08 95       	ret

0000056a <__fp_zero>:
 56a:	e8 94       	clt

0000056c <__fp_szero>:
 56c:	bb 27       	eor	r27, r27
 56e:	66 27       	eor	r22, r22
 570:	77 27       	eor	r23, r23
 572:	cb 01       	movw	r24, r22
 574:	97 f9       	bld	r25, 7
 576:	08 95       	ret

00000578 <__gesf2>:
 578:	0e 94 47 02 	call	0x48e	; 0x48e <__fp_cmp>
 57c:	08 f4       	brcc	.+2      	; 0x580 <__gesf2+0x8>
 57e:	8f ef       	ldi	r24, 0xFF	; 255
 580:	08 95       	ret

00000582 <__mulsf3>:
 582:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <__mulsf3x>
 586:	0c 94 82 02 	jmp	0x504	; 0x504 <__fp_round>
 58a:	0e 94 74 02 	call	0x4e8	; 0x4e8 <__fp_pscA>
 58e:	38 f0       	brcs	.+14     	; 0x59e <__mulsf3+0x1c>
 590:	0e 94 7b 02 	call	0x4f6	; 0x4f6 <__fp_pscB>
 594:	20 f0       	brcs	.+8      	; 0x59e <__mulsf3+0x1c>
 596:	95 23       	and	r25, r21
 598:	11 f0       	breq	.+4      	; 0x59e <__mulsf3+0x1c>
 59a:	0c 94 6b 02 	jmp	0x4d6	; 0x4d6 <__fp_inf>
 59e:	0c 94 71 02 	jmp	0x4e2	; 0x4e2 <__fp_nan>
 5a2:	11 24       	eor	r1, r1
 5a4:	0c 94 b6 02 	jmp	0x56c	; 0x56c <__fp_szero>

000005a8 <__mulsf3x>:
 5a8:	0e 94 93 02 	call	0x526	; 0x526 <__fp_split3>
 5ac:	70 f3       	brcs	.-36     	; 0x58a <__mulsf3+0x8>

000005ae <__mulsf3_pse>:
 5ae:	95 9f       	mul	r25, r21
 5b0:	c1 f3       	breq	.-16     	; 0x5a2 <__mulsf3+0x20>
 5b2:	95 0f       	add	r25, r21
 5b4:	50 e0       	ldi	r21, 0x00	; 0
 5b6:	55 1f       	adc	r21, r21
 5b8:	62 9f       	mul	r22, r18
 5ba:	f0 01       	movw	r30, r0
 5bc:	72 9f       	mul	r23, r18
 5be:	bb 27       	eor	r27, r27
 5c0:	f0 0d       	add	r31, r0
 5c2:	b1 1d       	adc	r27, r1
 5c4:	63 9f       	mul	r22, r19
 5c6:	aa 27       	eor	r26, r26
 5c8:	f0 0d       	add	r31, r0
 5ca:	b1 1d       	adc	r27, r1
 5cc:	aa 1f       	adc	r26, r26
 5ce:	64 9f       	mul	r22, r20
 5d0:	66 27       	eor	r22, r22
 5d2:	b0 0d       	add	r27, r0
 5d4:	a1 1d       	adc	r26, r1
 5d6:	66 1f       	adc	r22, r22
 5d8:	82 9f       	mul	r24, r18
 5da:	22 27       	eor	r18, r18
 5dc:	b0 0d       	add	r27, r0
 5de:	a1 1d       	adc	r26, r1
 5e0:	62 1f       	adc	r22, r18
 5e2:	73 9f       	mul	r23, r19
 5e4:	b0 0d       	add	r27, r0
 5e6:	a1 1d       	adc	r26, r1
 5e8:	62 1f       	adc	r22, r18
 5ea:	83 9f       	mul	r24, r19
 5ec:	a0 0d       	add	r26, r0
 5ee:	61 1d       	adc	r22, r1
 5f0:	22 1f       	adc	r18, r18
 5f2:	74 9f       	mul	r23, r20
 5f4:	33 27       	eor	r19, r19
 5f6:	a0 0d       	add	r26, r0
 5f8:	61 1d       	adc	r22, r1
 5fa:	23 1f       	adc	r18, r19
 5fc:	84 9f       	mul	r24, r20
 5fe:	60 0d       	add	r22, r0
 600:	21 1d       	adc	r18, r1
 602:	82 2f       	mov	r24, r18
 604:	76 2f       	mov	r23, r22
 606:	6a 2f       	mov	r22, r26
 608:	11 24       	eor	r1, r1
 60a:	9f 57       	subi	r25, 0x7F	; 127
 60c:	50 40       	sbci	r21, 0x00	; 0
 60e:	9a f0       	brmi	.+38     	; 0x636 <__mulsf3_pse+0x88>
 610:	f1 f0       	breq	.+60     	; 0x64e <__mulsf3_pse+0xa0>
 612:	88 23       	and	r24, r24
 614:	4a f0       	brmi	.+18     	; 0x628 <__mulsf3_pse+0x7a>
 616:	ee 0f       	add	r30, r30
 618:	ff 1f       	adc	r31, r31
 61a:	bb 1f       	adc	r27, r27
 61c:	66 1f       	adc	r22, r22
 61e:	77 1f       	adc	r23, r23
 620:	88 1f       	adc	r24, r24
 622:	91 50       	subi	r25, 0x01	; 1
 624:	50 40       	sbci	r21, 0x00	; 0
 626:	a9 f7       	brne	.-22     	; 0x612 <__mulsf3_pse+0x64>
 628:	9e 3f       	cpi	r25, 0xFE	; 254
 62a:	51 05       	cpc	r21, r1
 62c:	80 f0       	brcs	.+32     	; 0x64e <__mulsf3_pse+0xa0>
 62e:	0c 94 6b 02 	jmp	0x4d6	; 0x4d6 <__fp_inf>
 632:	0c 94 b6 02 	jmp	0x56c	; 0x56c <__fp_szero>
 636:	5f 3f       	cpi	r21, 0xFF	; 255
 638:	e4 f3       	brlt	.-8      	; 0x632 <__mulsf3_pse+0x84>
 63a:	98 3e       	cpi	r25, 0xE8	; 232
 63c:	d4 f3       	brlt	.-12     	; 0x632 <__mulsf3_pse+0x84>
 63e:	86 95       	lsr	r24
 640:	77 95       	ror	r23
 642:	67 95       	ror	r22
 644:	b7 95       	ror	r27
 646:	f7 95       	ror	r31
 648:	e7 95       	ror	r30
 64a:	9f 5f       	subi	r25, 0xFF	; 255
 64c:	c1 f7       	brne	.-16     	; 0x63e <__mulsf3_pse+0x90>
 64e:	fe 2b       	or	r31, r30
 650:	88 0f       	add	r24, r24
 652:	91 1d       	adc	r25, r1
 654:	96 95       	lsr	r25
 656:	87 95       	ror	r24
 658:	97 f9       	bld	r25, 7
 65a:	08 95       	ret

0000065c <_exit>:
 65c:	f8 94       	cli

0000065e <__stop_program>:
 65e:	ff cf       	rjmp	.-2      	; 0x65e <__stop_program>
